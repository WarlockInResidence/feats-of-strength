buildscript {
    ext {
        springBootVersion = '2.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '1.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.webjars:jquery:3.3.1-1'
    runtimeOnly 'org.webjars:jquery-ui:1.12.1'
    runtimeOnly 'org.webjars:bootstrap:4.1.3'
    runtimeOnly 'org.webjars:webjars-locator:0.38'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
//plugins {
//    id 'org.springframework.boot' version '2.6.1'
//    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//    id 'java'
//}
//
//group = 'tech.dumpsterfire'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'
//
//repositories {
//    mavenCentral()
//}
//
//dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.flywaydb:flyway-core'
//    runtimeOnly 'org.postgresql:postgresql'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//}

//task stage(type: Copy, dependsOn: [clean, build]) {
//    from jar.archivePath
//    into project.rootDir
//    rename { 'app.jar' }
//}

//test {
//    useJUnitPlatform()
//}
//
//task installFrontend(type: Exec) {
//	inputs.file(file("frontend/yarn.lock"))
//	inputs.file(file("frontend/package.json"))
//	outputs.dir(file("frontend/node_modules"))
//	commandLine("yarn", "--cwd", "frontend", "install")
//}
//
//task buildFrontend(type: Exec) {
//	dependsOn("installFrontend")
//	inputs.dir(file("frontend"))
//	outputs.dir(file("frontend/build"))
//	commandLine("yarn", "--cwd", "frontend", "build")
//}
//
//task copyFrontend(type: Sync) {
//	dependsOn("buildFrontend")
//	from(file("./frontend/build"))
//	into(file("$buildDir/resources/main/static"))
//	doLast {
//		println("copied built frontend to static resources")
//	}
//}
//
//task copyFrontendForIntelliJ(type: Sync) {
//	dependsOn("buildFrontend")
//	from(file("./frontend/build"))
//	into(file("./src/main/resources/static"))
//	doLast {
//		println("copied built frontend to static resources")
//	}
//}
//
//task cleanFrontend(type: Delete) {
//	delete(file("./frontend/build"))
//	delete(file("./src/main/resources/static"))
//}
//
//bootJar {
//	dependsOn(copyFrontend)
//}
//
//bootRun {
//	dependsOn(copyFrontend)
//}
//
//clean {
//	dependsOn(cleanFrontend)
//}
//
//jar {
//    enabled = false
//}